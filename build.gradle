plugins {
    id "groovy"
    id "java"
    id "org.owasp.dependencycheck" version '9.0.9'
    id "maven-publish"
}

group = "com.boclips"
version = "1.0-SNAPSHOT"

repositories {
    mavenCentral()
    maven {
        url = uri("https://jitpack.io")
    }
}

sourceSets {
    testContract {
        groovy {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir "src/test_contract/groovy"
        }
        resources.srcDir file("src/test_contract/resources")
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

configurations {
    testContractImplementation.extendsFrom(implementation)
    testContractImplementation.extendsFrom(testImplementation)
}

dependencies {
    annotationProcessor("org.projectlombok:lombok:1.18.28")
    compileOnly("org.projectlombok:lombok:1.18.28")

    implementation("com.konghq:unirest-java:3.14.5")
    implementation("org.apache.httpcomponents:httpclient:4.5.14")
    implementation("com.fasterxml.jackson.core:jackson-databind:2.16.1")
    implementation("org.slf4j:slf4j-api:2.0.7")
    implementation("org.apache.commons:commons-collections4:4.4")
    implementation("net.jodah:failsafe:2.4.4")
    implementation("com.damnhandy:handy-uri-templates:2.1.8")
    implementation("com.kaltura:kalturaApiClient:19.3.0")

    testImplementation("au.com.dius:pact-jvm-provider_2.11:3.5.6")
    testImplementation("au.com.dius:pact-jvm-consumer-groovy_2.11:3.5.24")
    testImplementation("org.yaml:snakeyaml:2.1")
    testImplementation("com.damnhandy:handy-uri-templates:2.1.8")
    testImplementation("junit:junit:4.13.2")
    testImplementation("org.spockframework:spock-core:1.1-groovy-2.4")
    testImplementation("org.codehaus.groovy:groovy-all:3.0.24")
    testImplementation("net.bytebuddy:byte-buddy:1.14.11")
    testImplementation("org.objenesis:objenesis:3.3")

    testContractImplementation("org.slf4j:slf4j-log4j12:2.0.7")
}

task testContract(type: Test) {
    testClassesDirs = sourceSets.testContract.output.classesDirs
    classpath = sourceSets.testContract.runtimeClasspath
}

dependencyCheck {
    failBuildOnCVSS = 7
    analyzers.assemblyEnabled = false
    suppressionFile = "./dependency-check-suppressions.xml"
    outputDirectory = "$rootDir/security-report"
    nvd {
        apiKey = nvdApiKey
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}
